stages:
  - build
  - deploy

build_backend:
  stage: build
  image: maven:14.0.0-openjdk-19
  script:
    - cd Backend
    - echo "Building app..."
    - mvn clean install
    - echo "Finished building the app."
  artifacts:
    expire_in: 1 week
    paths:
      - backend/PI/target/ovniric-0.0.1-SNAPSHOT.jar

build_frontend:
  stage: build
  image: node:latest
  script:
    - echo "Building the app"
    - cd frontend/rent-car
    - ls
    - npm --force install
    - CI=false npm run build
    - cd build
    - ls
    - cd ..
    - pwd
  artifacts:
    expire_in: 1 week
    name: react_build
    paths:
      - ./frontend/rent-car/build/

deploy_Backend:
  stage: deploy
  needs: [build_backend]
  image: alpine:3.11
  before_script:
    - apk update && apk add openssh-client bash
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - touch ~/.ssh/config
      - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - ssh-keyscan -H "$3.22.186.197" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo "Deploying started..."
    - ssh ubuntu@$3.22.186.197 "sudo systemctl stop ovniricapp.service"
    - scp backend/PI/target/ovniric-0.0.1-SNAPSHOT.jar ubuntu@$3.22.186.197:~/ovniric-app/
    - ssh ubuntu@$3.22.186.197 "sudo systemctl start consoleapp.service"
    - echo "Finished deploying the app."

deploy_Frontend:
  stage: deploy
  needs: [build_frontend]
  image: python:latest
  script:
    - cd /builds/ctd/proyecto-integrador-1022/0222-ft-c1/grupo-04/frontend/rent-car/build
    - ls
    - pwd
    - cd /builds/ctd/proyecto-integrador-1022/0222-ft-c1/grupo-04
    - ls
    - pip install awscli
    - aws configure set aws_secret_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws s3 sync /builds/ctd/proyecto-integrador-1022/0222-ft-c1/grupo-04/frontend/rent-car/build s3://grupo4c1frontend
